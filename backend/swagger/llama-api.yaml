openapi: 3.0.3
info:
  title: Llama API
  version: 1.0.0 # don't know the real version
  description: Llama API
  contact:
    name: Llama API
    url: https://docs.llama-api.com/api-reference/endpoint/create
servers:
  - url: https://api.llama-api.com
    description: Llama server
tags:
  - name: Chat
    description: chatbot API related endpoints
paths:

  /chat/completions:
    post:
      tags:
        - Chat
      summary: Execute chat
      description: This endpoint is used to generate a chat response.
      security:
        - BearerAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatRequest'
      responses:
        '200':
          description: A successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatResponse'

components:
  schemas:

    ChatRequest:
      type: object
      properties:
        model:
          $ref: '#/components/schemas/Model'
        messages:
          type: array
          description: The prompt(s) to generate a completion for.
          items:
            $ref: '#/components/schemas/Message'
          example: [
            {
              "role": "user",
              "content": "What is the weather like in Boston?"
            }
          ]
        functions:
          type: array
          description: Generate function calls with arguments.
          items:
            $ref: '#/components/schemas/Function'
        stream:
          type: boolean
          description: Whether to stream the response.
          example: false
        function_call:
          type: string
          description: The function name to call.
          example: "get_current_weather"

    ChatResponse:
      type: object
      properties:
        created:
          type: integer
          description: Unix timestamp of when the completion was generated.
          example: 1716636628
        model:
          $ref: '#/components/schemas/Model'
        usage:
          type: object
          properties:
            prompt_tokens:
              type: integer
              description: The number of tokens in the prompt(s).
              example: 428
            completion_tokens:
              type: integer
              description: The number of tokens in the completion(s).
              example: 28
            total_tokens:
              type: integer
              description: The total number of tokens (prompt + completion).
              example: 456
        choices:
          type: array
          items:
            $ref: '#/components/schemas/Choice'
          example: [
            {
              "index": 0,
              "message": {
                "role": "assistant",
                "content": null,
                "function_call": {
                  "name": "get_current_weather",
                  "arguments": {
                    "location": "Boston",
                    "days": 1,
                    "unit": "fahrenheit"
                  }
                }
              },
              "finish_reason": "function_call"
            }
          ]

    Model:
      type: string
      description: >
        The model to use for completion. List of available models
        <a href="https://docs.llama-api.com/quickstart#available-models">here</a>.
      example: "llama3-70b"

    Role:
      type: string
      enum:
        - "system"
        - "user"
        - "assistant"
      example: "user"

    Message:
      type: object
      properties:
        role:
          $ref: '#/components/schemas/Role'
        content:
          type: string
          description: The message content.
          nullable: true
          example: "What is the weather like in Boston?"
        function_call:
          $ref: '#/components/schemas/FunctionCall'

    Function:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/FunctionCallName'
        description:
          type: string
          description: The function description.
          example: "Get the current weather in a given location"
        parameters:
          allOf:
            - $ref: '#/components/schemas/FunctionParameter'
          example:
            type: "object"
            properties: {
              "location": {
                "type": "string",
                "description": "The city and state, e.g. San Francisco, CA"
              },
              "days": {
                "type": "number",
                "description": "for how many days ahead you wants the forecast"
              },
              "unit": {
                "type": "string",
                "enum": [ "celsius", "fahrenheit" ]
              }
            }
        required:
          type: array
          description: The required function parameters.
          items:
            type: string
          example: [ "location", "days" ]

    FunctionParameter:
      type: object
      properties:
        type:
          type: string
          description: The parameter type.
          example: "object"
        description:
          type: string
          description: The parameter description.
          nullable: true
          example: "The parameter properties."
        properties:
          type: object
          description: The parameter properties

    FunctionCallName:
      type: string
      description: The function name.
      example: "get_current_weather"
      nullable: true

    FunctionCall:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/FunctionCallName'
        arguments:
          type: object
          description: The function arguments.
          example: {
            "location": "Boston",
            "days": 1,
            "unit": "fahrenheit"
          }

    Choice:
      type: object
      properties:
        index:
          type: integer
          description: The index of the choice.
          example: 0
        message:
          $ref: '#/components/schemas/Message'
        finish_reason:
          type: string
          description: The reason the conversation ended.
          example: "function_call"

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
