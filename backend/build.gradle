plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.0'
	id 'io.spring.dependency-management' version '1.1.4'
}

bootRun {
	systemProperty 'app.config.workingDirectory', System.getProperty('user.dir')
}

group = 'com.janbabak'
version = '0.0.1'

java {
	sourceCompatibility = '17'
}

jar {
	enabled = false // not to generate *plain.jar file
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation:3.2.2'
	implementation 'org.springframework.boot:spring-boot-starter-security:3.4.2' // latest version (26. 1. 2025)
	implementation 'io.jsonwebtoken:jjwt:0.12.6'
	implementation 'io.jsonwebtoken:jjwt-api:0.12.6'
	implementation 'io.jsonwebtoken:jjwt-impl:0.12.6'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.12.6'
	implementation 'org.json:json:20240303'

	compileOnly 'org.projectlombok:lombok'

	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	runtimeOnly 'org.postgresql:postgresql'
 	implementation 'mysql:mysql-connector-java:8.0.33' // latest version (26. 1. 2025)

	annotationProcessor 'org.projectlombok:lombok'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'com.h2database:h2:2.2.224'
	testImplementation "org.testcontainers:junit-jupiter:1.20.4" // latest version (26. 1. 2025)
	testImplementation "org.testcontainers:postgresql:1.19.8"
	testImplementation "org.testcontainers:mysql:1.19.8"
	testImplementation 'org.springframework.security:spring-security-test:6.3.3'

}

tasks.named('test') {
	useJUnitPlatform()

	boolean showLogs = project.hasProperty("showLogs")

	if (showLogs) {
		testLogging {
			// Show standard out and standard error of the test JVM(s) on the console.
			showStandardStreams = true
		}
	}
}
